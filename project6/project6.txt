TITLE project6
; Xuying He
; This program ask the user if they want to start the program. If yes, then generate two arrays with random numbers(0-10) in it.
; And display the two array and the sum of the array.
; If no, then end the program.

INCLUDE irvine32.inc
Space = 32							  ; ASCII code for Space
.data
prompting BYTE "Do you want to start the program(Y/N)? : ",0
quit BYTE "Existing program...",0
start BYTE "Starting...",0
title1 BYTE "Array1: ",0
title2 BYTE "Array2: ",0
Sum BYTE "Sum: ",0

array1 BYTE 8 dup(0)				  		; initials two array
array2 BYTE 8 dup(0)				  
ArraySum DWORD ?
.code
main PROC

	call prompt				  		; display prompt

	
exit
main ENDP

;---------------------------------------------------- 
; Prompt the user if they want to start the program
; Receives: None
; Returns: None
;----------------------------------------------------
prompt PROC
	mov al, 0					  	; clear al = 0
	mov edx, OFFSET prompting			  	; display the prompt	
	call WriteString

	.IF al == 0					
		call ReadChar					; input char(user's response into AL)
		call WriteChar					; display AL
		call Crlf					; display a new line
		.IF al == "Y" || al == "y"		
			mov edx, OFFSET start			; output starting message
			call WriteString	
			call Output				; display the arrays
		.ELSE							
			mov edx, OFFSET quit			; output ending message
			call WriteString
		.ENDIF							
	.ENDIF		
	call Crlf						; new line
		ret						; return to the next instruction
prompt ENDP


;-------------------------------------------
; Generate random number(0-10) into the array
; and Calculate the sum of the array
; Receives: ESI = array address
; ECX = the number of elements in the arrray
; Returns: EBX = array sum
;------------------------------------------- 
RandomNum PROC USES esi ecx
; generate length of array integers from 0 - 10      
			 mov ebx, 0				; Initialize the EBX = array sum
GenerateRand:
			 mov eax, 11				; set an integer range is between 0 and 10
			 call RandomRange			; generate the random integer from the range
			 call WriteDec				; print the value
			 mov [esi], eax				; places it into the array
			 add ebx, eax		 		; add the value to the sum
			 mov al, Space				; Space
			 call WriteChar				; display space
			 inc esi				; move to the next index in the array
	
			 loop GenerateRand			; end when fill the entire array
			 
			 call Crlf				; new line

			ret
RandomNum ENDP

;---------------------------------------------------- 
; Output the arrays and their sum
; Receives: None
; Returns: None
;----------------------------------------------------
Output PROC uses esi ecx edx
		call Crlf
		call Randomize

		mov edx, OFFSET title1				; print array name
		call WriteString
		mov esi, OFFSET array1				; pass array address
		mov ecx, LENGTHOF array1			; pass the length of the array
		call RandomNum					; display the array

		mov eax, ebx				
		mov edx, OFFSET Sum				; display the label
		call WriteString
		call WriteDec					; display the sum of the array

		call Crlf					; new line

		mov edx, OFFSET title2				; reset the array name
		call WriteString					
		mov esi, OFFSET array2				; pass array2 address
		mov ecx, LENGTHOF array2			; pass the length of the array2
		call RandomNum					; generate and display the array
				
		mov eax, ebx					; display the sum
		mov edx, OFFSET Sum
		call WriteString
		call WriteDec
		ret
Output ENDP

END main